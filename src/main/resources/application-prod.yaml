spring:
  # Production Database Configuration (GCP Cloud SQL - hss_prod database)
  datasource:
    url: jdbc:postgresql:///hss_prod?socketFactory=com.google.cloud.sql.postgres.SocketFactory&cloudSqlInstance=${GCP_SQL_INSTANCE_CONNECTION_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 60000  # 60 saniye
      initialization-fail-timeout: 0
      maximum-pool-size: 5  # Daha az connection
      minimum-idle: 1
      idle-timeout: 300000  # 5 dakika
      max-lifetime: 1200000  # 20 dakika
  
  cloud:
    gcp:
      sql:
        enabled: false
        database-name: hss_prod
        instance-connection-name: ${GCP_SQL_INSTANCE_CONNECTION_NAME}
      storage:
        bucket-name: ${GCP_STORAGE_BUCKET}
        project-id: ${GCP_PROJECT_ID}
  
  # JPA Configuration for Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
        connection:
          provider_disables_autocommit: true
  
  # Flyway Configuration for Production
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    fail-on-missing-locations: false
  
  # Security Configuration for Production
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

# Server Configuration for Production
server:
  port: ${PORT:8080}
  servlet:
    context-path: /
  address: 0.0.0.0
  # Startup timeout artırıldı - Cloud Run için daha uzun
  startup-timeout: 600000  # 10 dakika
  # Shutdown timeout da artırıldı
  shutdown-timeout: 30000  # 30 saniye

# Management Configuration for Production
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
  server:
    port: ${PORT:8080}
  metrics:
    export:
      prometheus:
        enabled: true

# Production specific logging
logging:
  level:
    com.hss.hss_backend: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.web: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
